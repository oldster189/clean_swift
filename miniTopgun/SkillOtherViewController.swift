//
//  SkillOtherViewController.swift
//  miniTopgun
//
//  Created by Codemobiles on 7/24/2560 BE.
//  Copyright (c) 2560 Izpal. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SkillOtherDisplayLogic: class
{
    func displaySomething(viewModel: SkillOther.FetchAllSkillOther.ViewModel)
}

class SkillOtherViewController: UIViewController, SkillOtherDisplayLogic
{
    var interactor: SkillOtherBusinessLogic?
    var router: (NSObjectProtocol & SkillOtherRoutingLogic & SkillOtherDataPassing)?
    var displayedSkillOther:[SkillOtherData]?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = SkillOtherInteractor()
        let presenter = SkillOtherPresenter()
        let router = SkillOtherRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.title = "Skill Other"
        self.setupTableView()
        self.fetchAllSkillOther()
    }
    
    // MARK: Do something
    fileprivate func setupTableView() {
        self.mTableView.tableFooterView = UIView() 
    }
    
    
    func fetchAllSkillOther()
    {
        let request = SkillOther.FetchAllSkillOther.Request(skillOtherField: SkillOther.skillOtherField(idJsk: "114459", idResume: "0"))
        interactor?.fetchAllSkillOther(request: request)
    }
    
    func displaySomething(viewModel: SkillOther.FetchAllSkillOther.ViewModel)
    {
        displayedSkillOther = viewModel.skillOtherList
        mTableView.reloadData()
        
    }
    
    @IBOutlet weak var mTableView:UITableView!
}

extension SkillOtherViewController:UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        guard let list = displayedSkillOther else {
            return 0
        }
        return list.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: SkillOtherCell.identifier) as? SkillOtherCell
        let viewModel = displayedSkillOther![indexPath.row]
        cell?.setCell(with: viewModel)
        return cell!
    }
}

extension SkillOtherViewController:UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
}


