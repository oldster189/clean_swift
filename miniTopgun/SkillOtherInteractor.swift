//
//  SkillOtherInteractor.swift
//  miniTopgun
//
//  Created by Codemobiles on 7/24/2560 BE.
//  Copyright (c) 2560 Izpal. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SkillOtherBusinessLogic
{
    func fetchAllSkillOther (request:SkillOther.FetchAllSkillOther.Request)
}

protocol SkillOtherDataStore
{
    //var name: String { get set } 
    var skillOtherList: [SkillOtherData]? { get set }
}

class SkillOtherInteractor: SkillOtherBusinessLogic, SkillOtherDataStore
{
    var presenter: SkillOtherPresentationLogic?
    var worker: SkillOtherWorker? 
    var skillOtherList: [SkillOtherData]?
    
    // MARK: Do something
    
    
    func fetchAllSkillOther (request:SkillOther.FetchAllSkillOther.Request){
        let request = request.skillOtherField
        
        worker = SkillOtherWorker()
        worker?.fetchAllSKillOther(idJsk: request.idJsk, idResume: request.idResume, completion: { (list) in
            self.skillOtherList = list
            let response = SkillOther.FetchAllSkillOther.Response(skillOtherList: self.skillOtherList)
            self.presenter?.presentSomething(response: response)
        }) 
    }
    
}
